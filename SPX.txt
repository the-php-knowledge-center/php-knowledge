SPX's can profile both web and console apps.

For web apps, it can only provide full report, while for the console app, it can provide:
fp	Flat profile	The flat profile provided by SPX. It is the default report type and is directly printed on STDERR.
full	Full report	This is the report type for web UI. Reports will be stored in SPX data directory and thus will be available for analysis on web UI side.
trace	Trace file	A custom format (human readable text) trace file.

SPX's profile data by default is generated at /tmp/spx

The raw text file is contained at one of the .gz file, we can use gunzip to open the gz and extract the text information

(We might be able to get the function call and file trace information by extracting the information in the text file)

In OSX, we can find the latest modified file in the /tmp/spx by doing:

find . -type f -print0 | xargs -0 stat -f "%m %N" | sort -rn | head -1 | cut -f2- -d" "

(see details at: https://stackoverflow.com/questions/4561895/how-to-recursively-find-the-latest-modified-file-in-a-directory/18641147)

To mock a chrome browser based request in curl, we can do something like:
curl 'http://127.0.0.1:8080/' -H 'Connection: keep-alive' -H 'Cache-Control: max-age=0' -H 'Upgrade-Insecure-Requests: 1' -H 'User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_13_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/73.0.3683.75 Safari/537.36' -H 'Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3' -H 'Accept-Encoding: gzip, deflate, br' -H 'Accept-Language: en-US,en;q=0.9' -H 'Cookie: SPX_KEY=dev; SPX_BUILTINS=0; SPX_SAMPLING_PERIOD=0; SPX_DEPTH=0; SPX_METRICS=ct; SPX_ENABLED=1' --compressed

We can set the Set $_SERVER variable when calling PHP from command line, so we can turn a web app into a command line app, so that we can just use SPX command line profiling also.
see: https://stackoverflow.com/questions/10731183/set-server-variable-when-calling-php-from-command-line

* New Idea:
We can set up some php variables and pass them in the cli. The purpose is to run any web applications in cli. See:
[SamplePHPSimulatedVars.json]
